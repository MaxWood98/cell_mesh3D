%Det test
clearvars
clc
cla reset



% m = [1 2 3 4;
%      5 6 7 8;
%      9 10 11 12;
%      13 14 15 16];
% detf = det(m)


% % m = [1 2 3 4;
% %      5 6 7 8;
% %      9 10 11 12;
% %      16 14 15 16];
% M = rand(4,4);
% 
% detf = det(M)
% 
% % detf = det(m(1:3,1:3))
% % [detv] = det_3x3(m(1:3,1:3))
% 
% % (1,1) (1,2) (1,3) (1,4)
% % (2,1) (2,2) (2,3) (2,4)
% % (3,1) (3,2) (3,3) (3,4)
% % (4,1) (4,2) (4,3) (4,4)
% 
% 
% 
% M1 = [M(2,2) M(2,3) M(2,4);
%       M(3,2) M(3,3) M(3,4);
%       M(4,2) M(4,3) M(4,4)];
% det1 = det_3x3(M1);
% 
% M2 = [M(2,1) M(2,3) M(2,4);
%       M(3,1) M(3,3) M(3,4);
%       M(4,1) M(4,3) M(4,4)];
% det2 = det_3x3(M2);
% 
% M3 = [M(2,1) M(2,2) M(2,4);
%       M(3,1) M(3,2) M(3,4);
%       M(4,1) M(4,2) M(4,4)];
% det3 = det_3x3(M3);
% 
% M4 = [M(2,1) M(2,2) M(2,3);
%       M(3,1) M(3,2) M(3,3);
%       M(4,1) M(4,2) M(4,3)];
% det4 = det_3x3(M4);
% 
% detv4 = M(1,1)*det1 - M(1,2)*det2 + M(1,3)*det3 - M(1,4)*det4
% 
% function [detv] = det_3x3(M)
%     detv = M(1,1)*(M(2,2)*M(3,3) - M(2,3)*M(3,2)) - M(1,2)*(M(2,1)*M(3,3) - M(2,3)*M(3,1)) + M(1,3)*(M(2,1)*M(3,2) - M(2,2)*M(3,1));
% end


vt1 = [0 0 -0.2];
vt2 = [0 1 1];
vt3 = [1 1 0.1];
vtri = [vt1 ; vt2 ; vt3];
tri = [1 2 3];

vl1 = [0.5 0.75 1];
vl2 = [0.5 0.65 0.2];



% vt1 = [1.2915810758870001       0.94783107588700011        1.0000000000000000];
% vt2 = [1.3228310758870001       0.97908107588700011        1.0000000000000000];
% vt3 = [1.3228310758870001       0.94783107588700011        1.0000000000000000];
% vtri = [vt1 ; vt2 ; vt3];
% tri = [1 2 3];
% 
% vl1 = [1.2812500000000000        1.0312500000000000        1.0000000000000000];
% vl2 = [1.2812500000000000       0.96875000000000000        1.0000000000000000];



% vol1 = tetrahedra_volume_x6(vt1,vt2,vt3,vl1)
% vol2 = tetrahedra_volume_x6(vt1,vt2,vt3,vl2)

vol1 = tetrahedra_volume_x6(vl1,vt1,vt2,vl2)
vol2 = tetrahedra_volume_x6(vl1,vt2,vt3,vl2)
vol3 = tetrahedra_volume_x6(vl1,vt3,vt1,vl2)






hold on
patch('Faces',tri,'Vertices',vtri,'facealpha',0.5);
plot3([vl1(1),vl2(1)],[vl1(2),vl2(2)],[vl1(3),vl2(3)],'r')
hold off
% axis([- 1 1 -1 1 -1 1])
axis vis3d





%%

function [vol] = tetrahedra_volume_x6(V1,V2,V3,V4)
    Vmat = [V1(1) V1(2) V1(3) 1;
            V2(1) V2(2) V2(3) 1;
            V3(1) V3(2) V3(3) 1;
            V4(1) V4(2) V4(3) 1];
    vol = det_4x4(Vmat);
end

function [detv] = det_4x4(M)
    M1 = [M(2,2) M(2,3) M(2,4);
          M(3,2) M(3,3) M(3,4);
          M(4,2) M(4,3) M(4,4)];
    det1 = det_3x3(M1);

    M2 = [M(2,1) M(2,3) M(2,4);
          M(3,1) M(3,3) M(3,4);
          M(4,1) M(4,3) M(4,4)];
    det2 = det_3x3(M2);

    M3 = [M(2,1) M(2,2) M(2,4);
          M(3,1) M(3,2) M(3,4);
          M(4,1) M(4,2) M(4,4)];
    det3 = det_3x3(M3);

    M4 = [M(2,1) M(2,2) M(2,3);
          M(3,1) M(3,2) M(3,3);
          M(4,1) M(4,2) M(4,3)];
    det4 = det_3x3(M4);
    detv = M(1,1)*det1 - M(1,2)*det2 + M(1,3)*det3 - M(1,4)*det4;
end

function [detv] = det_3x3(M)
    detv = M(1,1)*(M(2,2)*M(3,3) - M(2,3)*M(3,2)) - M(1,2)*(M(2,1)*M(3,3) - M(2,3)*M(3,1)) + M(1,3)*(M(2,1)*M(3,2) - M(2,2)*M(3,1));
end